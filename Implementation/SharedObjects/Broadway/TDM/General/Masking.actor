{
    "type": "Masking",
    "badge": "TM",
    "tags": [
        "TDM"
    ],
    "addInput": true,
    "addOutput": false,
    "actorClass": "com.k2view.cdbms.usercode.common.TDM.TDMMasking",
    "inputs": [
		{
			"name": "maskingId",
			"mandatory": true,
			"const": "",
			"schema": {
				"type": "string"
			},
			"doc": ["A unique masking identifier used to generate a target value. To use the same masking Actor in different flows of the same project, use this parameter to refer to the same cache."]
		},
		{
			"name": "interface",
			"mandatory": true,
			"editor":{"id":"com.k2view.interface", "interfaceType":["database"], "interfaces": ["NONE", "IN-MEMORY", "SEED"]},
			"schema": {
				"type": "string"
			},
			"doc":[
				"The interface to be used to cache the masked values. This interface might be either any SQL DB interface defined in Fabric or the Fabric server memory.",
				"When SQL DB interface is set, the  'masking_cache' table under the 'k2masking' keyspace is used to cache the masked values. If the 'k2masking' keyspace does not exist, create it using the masking-create-cache-table.flow example or using the installation SQL script provided as part of the Masking library."

			]
		},
		{
			"name": "flowName",
			"mandatory": true,
			"editor":{
				"id":"com.k2view.innerFlow",
				"filterParams": ["seed"],
				"allowRemoveInputs": false
			},
			"schema": {"type": "string"},
			"const":"",
			"doc":"The name of the flow/actor to execute to obtain the generated value, e.g. RandomNumber."
		},
		{
			"name": "formatter",
			"mandatory": false,
			"editor": {
				"id":"com.k2view.innerFlow",
				"filterParams": ["formatterMode", "originalValue", "normalValue"],
				"allowRemoveInputs": false
			},
			"schema": {"type": "string"},
			"const":"",
			"doc": [
				"A formatter flow or actor can be set in order to preserve the original format in the masked value and to set the same masked value to all fields that have the same ’naked‘ value although they have  different formats.",
				"",
				"For example:",
				"The phone number exists in multiple fields in the data source with different formats:  +1 (254) 455 5666 ,  +1(254)4555666,  +1 (254)-455-5666.",
				"All these fields must get the same masked value (since they correspond to a single phone number), but the format needs to be different for each field in order to match its original format.",
				"This parameter is populated with the name of the flow/actor to normalize the input value,  and then format the output value according to the input value format."
			]
		},
		{
			"name": "category",
			"mandatory": false,
			"const": "enable_masking",
			"schema": {
				"type": "string"
			},
			"doc": [
				"Category of this instance of the actor. It used to provide possibility to enable/disable any category by fabric session using command:",
				"set <CATEGORY> true/false;",
				"In case the category is null or there is no configuration for the category in fabric session the actor will be launched.",
				"Populate this parameter with \"enable_masking\", \"enable_sequences\", or type a custom value."
			]
		},
		{
			"name": "useEnvironment",
			"mandatory": false,
			"const": false,
			"schema": {
				"type": "boolean"
			},
			"doc": ["The indication whether to separate masked value per the environment."]
		},		{
			"name": "useExecutionId",
			"mandatory": true,
			"const": false,
			"schema": {
				"type": "boolean"
			},
			"doc": ["The indication whether to use the Execution ID during the flow run whereby the Execution ID is a unique string generated each time the flow is running. Set to 'true' to generate a new masked value in each execution. When set to 'false', the same masked value is used across different executions."]
		},
		{
			"name": "useInstanceId",
			"mandatory": true,
			"const": true,
			"schema": {
				"type": "boolean"
			},
			"doc": ["Indicates whether to use the Instance ID as part of the masking cache. If it is set to true, the instance id is added to the masking cache. When set to false, the masked value is used across entities. Note that from Fabric 7.1 onwards if this parameter is set to true, Fabric gets the instance id value from the root_iid key if it is set. If the root_iid key is not set, it gets the current LUI instance. The root_iid key enables to maintain the referential integrity on PII fields across different LUs that logically belong to each other. For example, CRM and Billing LUs keep the Customer's data. The customer name needs to be identical in both LUs for a given customer. Setting the root_iid with the customer ID enables keeping the referential integrity between the CRM and Billing LUs."]
		},
		{
			"name": "hashedInputValue",
			"mandatory": true,
			"const": true,
			"schema": {
				"type": "boolean"
			},
			"doc": ["The indication whether to store the original or the hashed input value. By default the hashed value is stored. Set to 'false' when it is required to disable caching and store the original value."]
		},
		{
			"name": "TTL",
			"schema": {
				"type": "number"
			},
			"const": 86400,
			"doc": [
				"Each cached link of a hashed value to a masked value can have a TTL (Time To Live). This link will expire once the TTL has been reached, and the original value will be masked again.",
				"Time in seconds to keep masked values in the cache. If this parameter is 0, the masked value will be stored in the cache forever.",
				"Note that the TTL is supported only when creating the k2masking keyspace in Cassandra or populating the interface parameter in the masking Actors with IN-MEMORY value."
			]
		},
		{
			"name": "lruCacheSize",
			"schema": {
				"type": "number"
			},
			"const": 1000,
			"doc": ["The number of masked values to be stored in local LRU cache, affects the performance."]
		},
		{
			"name": "verifyUnique",
			"schema": {
				"type": "boolean"
			},
			"const": false,
			"doc": [
				"Determines whether different input values can be masked to the same masked value. The uniqueness is checked per maskingId, environment and execution ID. Set this parameter to 'true' if the masked value should be unique. For example, when masking an SSN, the masked value must be unique.",
				"If interface is IN-MEMORY, uniqueness is checked on a single node only and not across DC or Cluster.",
				"If interface is NONE, no uniqueness check is done."
			]
		},
		{
			"name": "onEmpty",
			"schema": {"type": "string"},
			"const": "LEAVE_EMPTY",
			"editor": {"id":"com.k2view.dropdown", "options":["LEAVE_EMPTY", "MASK_NO_CACHE", "MASK_AND_CACHE"]},
			"doc":[
				"Actor's behavior when no input value is provided.",
				"In case this param is LEAVE_EMPTY and the input value is NULL the actor will return NULL."
			]
		},
		{
			"name": "value",
			"schema": {},
			"doc":["The original value to be masked by the actor."]
		}
	],
	"outputs": [
		{
			"name": "value",
			"schema": {},
			"doc":["The masked value."]
		}
	]

}