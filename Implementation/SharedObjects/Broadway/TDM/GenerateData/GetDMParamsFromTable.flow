tags: TDM
stages:
  Stage 1:
    actors:
      FabricSetRead2:
        parent: FabricSetRead
        in:
          key:
            const: TDM_TASK_ID
            default: false
      getTDMDBSchema:
        parent: InnerFlow
        in:
          flowName:
            const: getTDMDBSchema
        out:
          schema:
            schema: string
  Stage 2:
    actors:
      DbCommand1:
        parent: DbCommand
        in:
          interface:
            const: TDM
          sql:
            const: "select param_name, param_type, param_value from ${@SCHEMA}.tdm_generate_task_field_mappings\r\
              \nwhere task_id = ${taskId}"
          SCHEMA:
            link: getTDMDBSchema/schema
            schema: string
            mandatory: false
          taskId:
            link: FabricSetRead2/result
            schema: integer
            mandatory: false
        out:
          result:
            schema: '#ref'
  Stage 3:
    dependsOn: Stage 2
    actors:
      Equals1:
        parent: Equals
        condition: result
        in:
          a:
            link:
              path: DbCommand1/result/param_type
              iterate: Iterate
            schema: string
          b:
            const: any
            schema: string
      JsonParser1:
        parent: JsonParser
        in:
          stream:
            link:
              path: DbCommand1/result/param_value
              iterate: Iterate
        out:
          object:
            schema: string
    split: '--------------------'
  Stage 5:
    else: true
    transactional: false
    dependsOn: Stage 2
    actors:
      Const1:
        parent: Const
        in:
          value:
            const: null
            link:
              path: DbCommand1/result/param_value
              iterate: Iterate
        out:
          value:
            schema: string
  Stage 4:
    actors:
      MapBuild1:
        parent: MapBuild
        in:
          key:
            const: param_name
            schema: string
          value:
            link: DbCommand1/result/param_name
        out:
          map:
            schema: '#ref'
      MapBuild2:
        parent: MapBuild
        in:
          key:
            const: param_value
            schema: string
          value:
            link:
            - JsonParser1/object
            - Const1/value
        out:
          map:
            schema: '#ref'
          previous:
            schema: '#ref'
  Stage 6:
    actors:
      MapMerge1:
        parent: MapMerge
        in:
          maps:
            link:
            - path: MapBuild1/map
              pos: 0
            - path: MapBuild2/map
              pos: 1
        out:
          map:
            schema: '#ref'
  Stage 7:
    actors:
      ArrayBuilder1:
        parent: ArrayBuilder
        in:
          input:
            link:
              path: MapMerge1/map
              pos: 0
        out:
          array:
            external: result
            schema: '#ref'
schemas:
  DbCommand1.out.result:
    type: array
    items:
      type: object
      properties:
        param_name:
          type: string
        param_type:
          type: string
        param_value:
          type: string
  MapBuild1.out.map:
    type: object
    properties:
      param_value:
        type: string
  MapBuild2.out.map:
    type: object
    properties:
      param_name:
        type: string
  MapBuild2.out.previous:
    type: object
    properties:
      distribution:
        type: string
      round:
        type: boolean
      type:
        type: string
      weights:
        type: array
        items:
          type: array
          items:
            type: integer
  MapMerge1.out.map:
    type: object
    properties:
      param_name:
        type: string
      param_value:
        type: string
  ArrayBuilder1.out.array:
    type: array
    items:
      type: object
      properties:
        param_name:
          type: string
        param_value:
          type: string
