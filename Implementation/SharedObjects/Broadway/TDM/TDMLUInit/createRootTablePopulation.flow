tags: TDM
stages:
  PWD:
    actors:
      Get Project Directory:
        parent: InnerFlow
        in:
          flowName:
            const: GetProjectFolder
        out:
          PROJECT_FOLDER:
            schema: string
  Templates Path:
    actors:
      FlowTemplate:
        parent: FileRead
        in:
          interface:
            const: null
            link: Get Project Directory/PROJECT_FOLDER
          path:
            const: SharedObjects/Templates/populationRootTable.pop.flow.template
  SharedObjects/Templates/populationRootTable.pop.flow.template:
    actors:
      Const:
        parent: Const
        in:
          value:
            const: null
            link: FlowTemplate/stream
        out:
          value:
            schema: '#ref'
  Search For {{LU_NAME}}:
    actors:
      Replace:
        parent: Replace
        in:
          search:
            const: '{{__LU_NAME}}'
          replace:
            const: null
            external: LU_NAME
          string:
            link: Const/value
  Search For {{TABLE_NAME}}:
    actors:
      'Replace ':
        parent: Replace
        in:
          search:
            const: '{{TABLE_NAME}}'
          replace:
            const: null
            external: TABLE_NAME
          string:
            link: Replace/string
  Search For {{KEY}}:
    actors:
      'Replace  ':
        parent: Replace
        in:
          search:
            const: '{{KEY}}'
          replace:
            const: null
            external: TABLE_KEY
          string:
            link: Replace /string
  Search For {{SOURCE_INTERFACE}}:
    actors:
      'Replace       ':
        parent: Replace
        in:
          search:
            const: '{{SOURCE_INTERFACE}}'
          replace:
            const: null
            external: SOURCE_INTERFACE
          string:
            link: Replace  /string
  'Check for Schema ':
    dependsOn: Search For {{SOURCE_INTERFACE}}
    actors:
      Schema is Not Null?:
        parent: NotNull
        condition: result
        in:
          value:
            external: SOURCE_SCHEMA
      'Const  ':
        parent: Const
        in:
          value:
            const: null
            link: Replace       /string
            schema: string
        out:
          value:
            schema: string
    split: '--------------------'
  Schema is NULL:
    else: true
    dependsOn: Search For {{SOURCE_INTERFACE}}
    actors:
      'Replace         ':
        parent: Replace
        in:
          search:
            const: '{{SOURCE_SCHEMA}}.'
          string:
            link: Replace       /string
  'Search For  {{SOURCE_SCHEMA}} ':
    actors:
      'Replace   ':
        parent: Replace
        in:
          search:
            const: '{{SOURCE_SCHEMA}}'
          replace:
            const: null
            external: SOURCE_SCHEMA
          string:
            link:
            - Const  /value
            - Replace         /string
  Search For {{{SOURCE_TABLE}}}:
    actors:
      'Replace               ':
        parent: Replace
        in:
          search:
            const: '{{{SOURCE_TABLE}}}'
          replace:
            const: null
            external: SOURCE_TABLE
          string:
            link: Replace   /string
      LU Folder:
        parent: StringFormat
        in:
          format:
            const: ${LU_PATH}Tables/
          LU_PATH:
            external: LU_PATH
            schema: string
            mandatory: false
  Get Population Flow Path:
    actors:
      StringFormat:
        parent: StringFormat
        in:
          format:
            const: ${TABLE_NAME}.population.flow
          TABLE_NAME:
            external: TABLE_NAME
            schema: string
            mandatory: false
  'Write Population ':
    actors:
      FileWrite:
        parent: FileWrite
        in:
          interface:
            const: null
            link: LU Folder/string
          stream:
            link: Replace               /string
          path:
            link: StringFormat/string
schemas:
  Const.out.value:
    type: array
    items:
      type: blob
