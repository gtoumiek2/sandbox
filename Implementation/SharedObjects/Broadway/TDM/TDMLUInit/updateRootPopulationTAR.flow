tags: TDM
stages:
  Get Path:
    actors:
      LU Folder:
        parent: StringFormat
        in:
          format:
            const: ${LU_PATH}Tables/
          LU_PATH:
            external: LU_PATH
            schema: string
            mandatory: false
      StringFormat:
        parent: StringFormat
        in:
          format:
            const: TAR_${ROOT_TABLE}.population.flow
          ROOT_TABLE:
            external: ROOT_TABLE
            schema: string
            mandatory: false
  Read File:
    actors:
      'FileRead ':
        parent: FileRead
        in:
          interface:
            const: null
            link: LU Folder/string
          path:
            link: StringFormat/string
  Parse File:
    actors:
      JsonParser:
        parent: JsonParser
        in:
          stream:
            link: FileRead /stream
        out:
          object:
            schema: '#ref'
  'Stringify ':
    actors:
      JsonStringify:
        parent: JsonStringify
        in:
          object:
            link: JsonParser/object
  Set Target Actor:
    actors:
      JavaScript:
        parent: JavaScript
        in:
          script:
            const:
              userCode: "var objTmp = JSON.parse(objIn);\r\nvar Levels = [...objTmp.levels];\r\
                \nvar stageActors = [];\r\n\r\nfor(var i=0; i<Levels.length; i++)\
                \ {\r\n\r\n    var objStage = Levels[i].stages;\r\n\r\n    // Find\
                \ Source stage\r\n    for(var y=0; y<objStage.length; y++) {\r\n \
                \       if(objStage[y].name=='Input') {\r\n            \r\n      \
                \      stageActors= [...objStage[y].actors];\r\n            stageActors.push({\"\
                name\": \"setTargetEnv_Actor1\",\"actorType\": {\"parentType\": \"\
                setTargetEnv_Actor\",\"inputs\": [],\"outputs\": []}});\r\n\r\n  \
                \          objStage[y].actors = stageActors;\r\n\r\n            /*\r\
                \n            for(var a=0; a<objStage[y].actors.length; a++) {\r\n\
                \                if(objStage[y].actors[a].actorType.parentType=='SourceDbQuery')\
                \ {\r\n                    for(var s=0; s<objStage[y].actors[a].actorType.inputs.length;\
                \ s++) {\r\n                        \r\n                    }\r\n\
                \                }\r\n            }\r\n            */\r\n        }\r\
                \n    }\r\n}\r\n\r\nobjTmp;"
              script: "var objTmp = JSON.parse(objIn);\nvar Levels = [].concat(objTmp.levels);\n\
                var stageActors = [];\n\nfor (var i = 0; i < Levels.length; i++) {\n\
                \  var objStage = Levels[i].stages; // Find Source stage\n\n  for\
                \ (var y = 0; y < objStage.length; y++) {\n    if (objStage[y].name\
                \ == 'Input') {\n      stageActors = [].concat(objStage[y].actors);\n\
                \      stageActors.push({\n        \"name\": \"setTargetEnv_Actor1\"\
                ,\n        \"actorType\": {\n          \"parentType\": \"setTargetEnv_Actor\"\
                ,\n          \"inputs\": [],\n          \"outputs\": []\n        }\n\
                \      });\n      objStage[y].actors = stageActors;\n      /*\r\n\
                \      for(var a=0; a<objStage[y].actors.length; a++) {\r\n      \
                \    if(objStage[y].actors[a].actorType.parentType=='SourceDbQuery')\
                \ {\r\n              for(var s=0; s<objStage[y].actors[a].actorType.inputs.length;\
                \ s++) {\r\n                  \r\n              }\r\n          }\r\
                \n      }\r\n      */\n    }\n  }\n}\n\nobjTmp;"
          objIn:
            link: JsonStringify/string
            schema: '#ref'
            mandatory: false
        out:
          result:
            schema: '#ref'
  Stringify:
    actors:
      'JsonStringify  ':
        parent: JsonStringify
        in:
          object:
            link: JavaScript/result
  Right File:
    actors:
      FileWrite:
        parent: FileWrite
        in:
          interface:
            const: null
            link: LU Folder/string
          path:
            link: StringFormat/string
          stream:
            link: JsonStringify  /string
schemas:
  JsonParser.out.object:
    type: object
    properties:
      levels:
        type: array
        items:
          type: object
          properties:
            stages:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  dependsOnList:
                    type: array
                    items: {
                      }
                  isLast:
                    type: integer
                  actors:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        actorType:
                          type: object
                          properties:
                            parentType:
                              type: string
                            readOnly:
                              type: boolean
                            inputs:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  schema:
                                    type: object
                                    properties: {
                                      }
                            outputs:
                              type: array
                              items: {
                                }
      connections:
        type: array
        items:
          type: object
          properties:
            leftPort:
              type: object
              properties:
                actor:
                  type: string
                name:
                  type: string
            rightPort:
              type: object
              properties:
                actor:
                  type: string
                name:
                  type: string
  JavaScript.in.objIn:
    type: object
    properties:
      levels:
        type: array
        items:
          type: object
          properties:
            stages:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  dependsOnList:
                    type: array
                    items: {
                      }
                  isLast:
                    type: integer
                  actors:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        actorType:
                          type: object
                          properties:
                            parentType:
                              type: string
                            readOnly:
                              type: boolean
                            inputs:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  schema:
                                    type: object
                                    properties: {
                                      }
                            outputs:
                              type: array
                              items: {
                                }
      connections:
        type: array
        items:
          type: object
          properties:
            leftPort:
              type: object
              properties:
                actor:
                  type: string
                name:
                  type: string
            rightPort:
              type: object
              properties:
                actor:
                  type: string
                name:
                  type: string
  JavaScript.out.result:
    type: object
    properties:
      levels:
        type: array
        items:
          type: object
          properties:
            stages:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  dependsOnList:
                    type: array
                    items: {
                      }
                  isLast:
                    type: integer
                  actors:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        actorType:
                          type: object
                          properties:
                            parentType:
                              type: string
                            readOnly:
                              type: boolean
                            inputs:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  schema:
                                    type: object
                                    properties: {
                                      }
                            outputs:
                              type: array
                              items: {
                                }
      connections:
        type: array
        items:
          type: object
          properties:
            leftPort:
              type: object
              properties:
                actor:
                  type: string
                name:
                  type: string
            rightPort:
              type: object
              properties:
                actor:
                  type: string
                name:
                  type: string
