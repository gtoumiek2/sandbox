tags: TDM
stages:
  Get Path:
    actors:
      Get Project Folder:
        parent: InnerFlow
        in:
          flowName:
            const: GetProjectFolder
        out:
          PROJECT_FOLDER:
            schema: string
      Get Max Population Order:
        parent: LuFunction
        in:
          functionName:
            const: getMaxPopulationOrder
          luName:
            external: luName
            schema: string
            mandatory: false
        out:
          result:
            schema: integer
  Get LU's Population Data:
    actors:
      LU's Folder:
        parent: StringFormat
        in:
          format:
            const: ${PROJECT_DIRECTORY}/LogicalUnits/${LU_NAME}
          PROJECT_DIRECTORY:
            link: Get Project Folder/PROJECT_FOLDER
            schema: string
            mandatory: false
          LU_NAME:
            external: luName
            schema: string
            mandatory: false
      List Population Flows:
        parent: LuFunction
        in:
          functionName:
            const: getPopulationsListForDelete
          luName:
            external: luName
            schema: string
            mandatory: false
        out:
          result:
            schema: '#ref'
      MathAdd1:
        parent: MathAdd
        in:
          b:
            const: 10
          a:
            link: Get Max Population Order/result
  Filter Out Tables:
    actors:
      filter Out TDM Tables:
        parent: filterOutTDMTables
        in:
          tableName:
            link:
              path: List Population Flows/result/tableName
              iterate: Iterate
          luName:
            external: luName
  Prepare Input Data:
    actors:
      Calculate Table's Order:
        parent: MathAdd
        in:
          a:
            link:
              path: List Population Flows/result/tableOrder
              iterate: Iterate
          b:
            link: MathAdd1/result
      Prepare Template Data:
        parent: InnerFlow
        in:
          flowName:
            const: buildDeleteTablesTemplateData
          table:
            link:
              path: filter Out TDM Tables/tableNameOut
              iterate: Iterate
            schema: string
            mandatory: false
          luType:
            external: luName
            schema: string
            mandatory: false
          schemaName:
            external: schemaName
            schema: string
            mandatory: false
          interfaceName:
            external: interfaceName
            schema: string
            mandatory: false
          useFabric:
            external: useFabric
            schema: boolean
            mandatory: false
        out:
          tableDefaultMapping:
            schema: '#ref'
  Format Additional Striings:
    actors:
      Format TableProperties:
        parent: StringFormat
        in:
          format:
            const: "    <TableProperties name=\"${tableName}\">\r\n      <Populations>\r\
              \n        <Population name=\"population.flow\" order=\"${tableOrder}\"\
              \ disabled=\"false\" populationType=\"Flow\" />\r\n      </Populations>\r\
              \n    </TableProperties>\r\n"
          tableName:
            link:
              path: Prepare Template Data/tableDefaultMapping/TableName
              iterate: Iterate
            schema: string
            mandatory: false
          tableOrder:
            link: Calculate Table's Order/result
            schema: integer
            mandatory: false
      Format Table Name:
        parent: StringFormat
        in:
          format:
            const: "<Table>${tableName}</Table>\r\n"
          tableName:
            link:
              path: Prepare Template Data/tableDefaultMapping/TableName
              iterate: Iterate
            schema: string
            mandatory: false
      Format Table Relation:
        parent: StringFormat
        in:
          format:
            const: "  <Relation>\r\n    <From tableType=\"TableObject\" table=\"${parentTableName}\"\
              \ column=\"${parentColumnName}\" columnId=\"${parentColumnName}\" />\r\
              \n    <To tableType=\"TableObject\" table=\"${tableName}\" populationObjectName=\"\
              population.flow\" column=\"${columnName}\" columnId=\"${columnName}\"\
              \ />\r\n  </Relation>\r\n"
          columnName:
            link:
              path: Prepare Template Data/tableDefaultMapping/PARENT_TABLE_DATA/FIELD_NAME
              iterate: Iterate
            schema: string
            mandatory: false
          tableName:
            link:
              path: Prepare Template Data/tableDefaultMapping/TableName
              iterate: Iterate
            schema: string
            mandatory: false
          parentTableName:
            link:
              path: Prepare Template Data/tableDefaultMapping/PARENT_TABLE_DATA/PARENT_TABLE
              iterate: Iterate
            schema: string
            mandatory: false
          parentColumnName:
            link:
              path: Prepare Template Data/tableDefaultMapping/PARENT_TABLE_DATA/PARENT_FIELD_NAME
              iterate: Iterate
            schema: string
            mandatory: false
      Format Table Graph:
        parent: StringFormat
        in:
          format:
            const: "    <Node name=\"${tableName}\" pos=\"0 0\" size=\"257 136\" listGroupSize=\"\
              250 100\" viewType=\"Table\" />\r\n"
          tableName:
            link:
              path: Prepare Template Data/tableDefaultMapping/TableName
              iterate: Iterate
            schema: string
            mandatory: false
  'Aggregate ':
    last: 1
    actors:
      Aggregate Table's Properties:
        parent: ArrayBuilder
        in:
          input:
            link:
              path: Format TableProperties/string
              pos: 0
        out:
          array:
            schema: '#ref'
      Aggregate Table's Names:
        parent: ArrayBuilder
        in:
          input:
            link:
              path: Format Table Name/string
              pos: 0
        out:
          array:
            schema: '#ref'
      Aggregate Table's  Relations:
        parent: ArrayBuilder
        in:
          input:
            link:
              path: Format Table Relation/string
              pos: 0
        out:
          array:
            schema: '#ref'
      Aggregate Table's Graph:
        parent: ArrayBuilder
        in:
          input:
            link:
              path: Format Table Graph/string
              pos: 0
        out:
          array:
            schema: '#ref'
  Close Inner Loop:
    last: 1
  Close Loop:
    last: 1
  Concatenate:
    actors:
      Concatenate Table's Properties:
        parent: Concat
        in:
          delimiter:
            const: ''
          elements:
            link: Aggregate Table's Properties/array
      Concatenate Table's Name:
        parent: Concat
        in:
          delimiter:
            const: ''
          elements:
            link: Aggregate Table's Names/array
      Concatenate Table's Relation:
        parent: Concat
        in:
          delimiter:
            const: ''
          elements:
            link: Aggregate Table's  Relations/array
      Concatenate Table's Graph:
        parent: Concat
        in:
          delimiter:
            const: ''
          elements:
            link: Aggregate Table's Graph/array
  Read Schema And Close Tags:
    actors:
      Read Schema File:
        parent: FileRead
        in:
          interface:
            const: null
            link: LU's Folder/string
          path:
            const: vdb.k2vdb.xml
      Close Tables Properties:
        parent: StringFormat
        in:
          format:
            const: "${TAR_TablesProperties}\r\n</TablesProperties>"
          TAR_TablesProperties:
            link: Concatenate Table's Properties/string
            schema: string
            mandatory: false
      Close Tables List:
        parent: StringFormat
        in:
          format:
            const: "${TAR_TablesList}\r\n</Tables>"
          TAR_TablesList:
            link: Concatenate Table's Name/string
            schema: string
            mandatory: false
      Close Relations:
        parent: StringFormat
        in:
          format:
            const: "${TAR_Releations}\r\n</DatabaseRelations>"
          TAR_Releations:
            link: Concatenate Table's Relation/string
            schema: string
            mandatory: false
      Close Group and Graph:
        parent: StringFormat
        in:
          format:
            const: "  <Group name=\"Target Tables For Delete\" pos=\"0 0\" size=\"\
              1100 1200\" wasexpanded=\"false\" expanded=\"true\">\r\n${TAR_Graph}\r\
              \n</Group>\r\n</Graph>"
          TAR_Graph:
            link: Concatenate Table's Graph/string
            schema: string
            mandatory: false
  Update Tables Properties:
    actors:
      Add Properties of New Tables:
        parent: Replace
        in:
          search:
            const: </TablesProperties>
          replace:
            const: null
            link: Close Tables Properties/string
          string:
            link: Read Schema File/stream
  Add Tables List:
    actors:
      Add Names of New Tables:
        parent: Replace
        in:
          search:
            const: </Tables>
          replace:
            const: null
            link: Close Tables List/string
          string:
            link: Add Properties of New Tables/string
  Add Tables Relations:
    actors:
      Add Relations of New Tables:
        parent: Replace
        in:
          search:
            const: </DatabaseRelations>
          replace:
            const: null
            link: Close Relations/string
          string:
            link: Add Names of New Tables/string
  Add New Group to Graph:
    actors:
      Add Group of New Tables:
        parent: Replace
        in:
          search:
            const: </Graph>
          replace:
            const: null
            link: Close Group and Graph/string
          string:
            link: Add Relations of New Tables/string
  Write Update Schema File:
    actors:
      Write Schema File:
        parent: FileWrite
        in:
          interface:
            const: null
            link: LU's Folder/string
          path:
            const: vdb.k2vdb.xml
          stream:
            link: Add Group of New Tables/string
schemas:
  List Population Flows.out.result:
    type: array
    items:
      type: object
      properties:
        tableOrder:
          type: integer
        populationName:
          type: string
        tableName:
          type: string
  Prepare Template Data.out.tableDefaultMapping:
    type: object
    properties:
      LU_NAME:
        type: string
      TableName:
        type: string
      Columns:
        type: array
        items:
          type: object
          properties:
            datatype:
              type: string
            name:
              type: string
      PARENT_TABLE_DATA:
        type: array
        items:
          type: object
          properties:
            FIELD_TYPE:
              type: string
            PARENT_TABLE:
              type: string
            PARENT_FIELD_NAME:
              type: string
            FIELD_NAME:
              type: string
      FullTextSearch:
        type: string
      TARGET_INTERFACE:
        type: string
      TARGET_SCHEMA:
        type: string
      OriginalTableName:
        type: string
      MainTableInd:
        type: boolean
  Aggregate Table's Properties.out.array:
    type: array
    items:
      type: string
  Aggregate Table's Names.out.array:
    type: array
    items:
      type: string
  Aggregate Table's  Relations.out.array:
    type: array
    items:
      type: string
  Aggregate Table's Graph.out.array:
    type: array
    items:
      type: string
