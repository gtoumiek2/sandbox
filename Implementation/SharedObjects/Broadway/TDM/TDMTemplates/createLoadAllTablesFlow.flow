tags: TDM
stages:
  Stage 1:
    actors:
      Get Project Directory:
        parent: InnerFlow
        in:
          flowName:
            const: GetProjectFolder
        out:
          PROJECT_FOLDER:
            schema: string
  Stage 2:
    actors:
      Read Template File:
        parent: FileRead
        height: 165
        in:
          interface:
            const: null
            link: Get Project Directory/PROJECT_FOLDER
          path:
            const: SharedObjects/Templates/TDM/tdmLoadAllTables.flow.template
      Build Template Inputs:
        parent: LuFunction
        in:
          functionName:
            const: getLuTablesMappedByOrder
          reverseInd:
            const: false
            schema: boolean
          luName:
            external: LU_NAME
            schema: string
            mandatory: false
        out:
          res:
            schema: '#ref'
  Stage 3:
    actors:
      flow folder:
        parent: StringFormat
        in:
          format:
            const: ${PROJECT_DIRECTORY}/LogicalUnits/${LU_NAME}/Broadway/LoadFlows
          LU_NAME:
            external: LU_NAME
            schema: string
          PROJECT_DIRECTORY:
            link: Get Project Directory/PROJECT_FOLDER
            schema: string
            mandatory: false
      ApplyTemplate:
        parent: LuFunction
        in:
          functionName:
            const: transform
          templateContent:
            link: Read Template File/stream
            schema: '#ref'
          data:
            link: Build Template Inputs/res
            schema: '#ref'
        out:
          result:
            schema: string
  Stage 4:
    actors:
      Write File:
        parent: FileWrite
        in:
          interface:
            const: null
            link: flow folder/string
          path:
            const: LoadAllTables.flow
          stream:
            link: ApplyTemplate/result
schemas:
  Build Template Inputs.out.res:
    type: array
    items:
      type: array
      items:
        type: string
  ApplyTemplate.in.templateContent:
    type: array
    items:
      type: blob
  ApplyTemplate.in.data:
    type: array
    items:
      type: array
      items:
        type: string
